
ALTER procedure [dbo].[DemandPostFileUploadScript]
as begin

--pre-check
if exists (select 1 from sys.tables where name = 'tmp_dd')
Drop table tmp_dd

select try_parse(today as Datetime) as Td, * into tmp_dd from DemandSnapshotData s

--select * from tmp_dd

CREATE INDEX idx_tmp_dd_td
ON tmp_dd (td)
CREATE INDEX idx_tmp_dd_reqno
ON tmp_dd (reqno)
------------------

if exists (select 1 from sys.tables where name = 'tmp_demand')
drop table tmp_demand

--select convert(datetime ,convert (date, getdate() ) )
select reqno, min(td) as st_dt ,  max(td) as en_dt, 0 as BalancePos, max(td) as eff_en_dt  into tmp_demand from tmp_dd
--where reqno = 'SL C/SL C/2015/462669'
group by reqno

--select * from tmp_demand
update tmp_demand
set en_dt = td
from tmp_demand d inner join tmp_dd t on t.ReqNo = d.ReqNo and t.Today = d.eff_en_dt and t.Balance_Postions <1
-------------------------

if exists (select 1 from sys.tables where name = 'tmp_demand_1')

drop table tmp_demand_1
select d.date,  t.*  into tmp_demand_1 from tmp_demand t
cross apply
(select * from dimdate d
where d.Date >= t.st_dt and  d.Date <= t.en_dt) d
--where reqno = 'SL C/SL C/2015/462669'
order by 1

------------------------

if exists (select 1 from sys.tables where name = 'tmp_demanddata')
drop table tmp_demanddata

select t.Date , t.st_dt, t.en_dt, t.reqno as ref,  d.Td into tmp_demanddata from tmp_demand_1 t
left outer join tmp_DD d
on d.reqno = t.reqno and d.td = t.Date

--order by t.reqno, 1

----------------------------

update tmp_demanddata
set Td = (select top 1 Today from tmp_dd d where d.ReqNo = t.ref and d.Today <= t.Date order by td desc)
from tmp_demanddata t
where Td is null

------------------------
--select * from tmp_demanddata
--where ref = 'SL C/SL C/2015/462669' 
--order by  ref,1

------------------------

if exists (select 1 from sys.tables where name = 'tmp_FactDemand')
drop table tmp_FactDemand
;with cte as
(
select  ReqNo, t.td, d.date, try_parse(Balance_Postions as int) as Balance_Postions, try_parse(Vacancy as int) as Vacancy
, TRY_PARSE( InitialDemand as int) as InitialDemand
, TRY_PARSE( [Actionable Position] as int) as [Actionable Position], TRY_PARSE( DroppedPos as int) as DroppedPos
, t.[Billing Start Date], t.[Approval Date], t.[SR Date]
, Getdate() as BSD, GETDATE() as SRApprovedDate
,ROW_NUMBER() over (partition by reqno order by t.td, d.date) as num 
from tmp_dd t inner join tmp_demanddata d on t.ReqNo = d.ref and d.Td = t.Td
)
select c.*
, case c.num when 1 then 0 else
ISNULL(d.Balance_Postions, 0) + ISNULL(d.DroppedPos , 0) -  isnull(c.Balance_Postions, 0) - ISNULL(c.DroppedPos , 0)  end as Fulfilled
, case c.num when 1 then 0 else
ISNULL(d.[Actionable Position], 0) + ISNULL(d.DroppedPos , 0) -  isnull(c.[Actionable Position], 0) - ISNULL(c.DroppedPos , 0) end   as ActionTaken
--, d.Balance_Postions, d.Vacancy , d.[Actionable Position]
, d.num as s_num  into tmp_FactDemand
from cte c
left outer join cte d on c.ReqNo = d.ReqNo and c.num = d.num +1
--where ISNULL(d.[Actionable Position], 0) + ISNULL(d.DroppedPos , 0) -  isnull(c.[Actionable Position], 0) - ISNULL(c.DroppedPos , 0) < 0 
--where c.ReqNo = 'CORP/ES-B/2015/451503'
--order by 1, 2, c.num
;

--select top 100 * from tmp_FactDemand where [SR Date]= ''
--SLMG/SL C/2015/420755
--SL C/SL C/2015/465789
--SLMG/SL C/2015/459994
--SLMG/SL C/2015/455329
End
GO
